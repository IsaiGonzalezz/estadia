-- TABLA USUARIO
CREATE TABLE USUARIO (
    ID_USUARIO INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE VARCHAR(255),
    username VARCHAR(255),
    ROL boolean,	
    PASSWORD VARCHAR(255)
);

-- TABLA CLIENTE
CREATE TABLE CLIENTE (
    ID_CLIENTE INT NOT NULL auto_increment PRIMARY KEY,
    RFC VARCHAR(20),
    RAZON_SOCIAL VARCHAR(255),
    USO_FACTURA VARCHAR(255),
    REGIMEN_FISCAL VARCHAR(255),
    CODIGO_POSTAL int
);

-- TABLA PROVEEDOR
CREATE TABLE PROVEEDOR (
    ID_PROVEEDOR INT PRIMARY KEY AUTO_INCREMENT,
    RAZON_SOCIAL VARCHAR(255),
    DIRECCION VARCHAR(255),
    MUNICIPIO varchar(255),
    CIUDAD varchar(255),
    ESTADO varchar(255),
    CP int,
    TELEFONO VARCHAR(10),
    RFC VARCHAR(18)
);

-- tabla estados
create table if not exists estados(
	id_estado int auto_increment primary key,
	nombre_estado varchar (100)
);

-- tabla de municipios
create table if not exists municipios(
	id_municipio int auto_increment primary key,
    nombre_municipio varchar (100),
    id_estado int,
    foreign key (id_estado) references estados (id_estado)
);

-- TABLA CATEGORIA_PRODUCTO
CREATE TABLE CATEGORIA_PRODUCTO (
    ID_CATEGORIA INT PRIMARY KEY AUTO_INCREMENT,
    DESCRIPCION VARCHAR(255)
);

-- TABLA PRODUCTO
CREATE TABLE PRODUCTO (
    ID_PRODUCTO INT PRIMARY KEY AUTO_INCREMENT,
    STOCK INT,
    NOMBRE VARCHAR(255),
    ID_CATEGORIA INT,
    COSTO_VENTA DECIMAL(10, 2),
    COSTO_COMPRA DECIMAL(10, 2),
    PORCENTAJE_UTILIDAD DECIMAL(5,2),
    PUNTO_REORDEN INT,
    ESTADO BOOLEAN,
    FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIA_PRODUCTO(ID_CATEGORIA)
    -- FOREIGN KEY (ID_PROVEEDOR) REFERENCES PROVEEDOR(ID_PROVEEDOR)
);

-- TABLA VENTA
CREATE TABLE VENTA (
    ID_VENTA INT PRIMARY KEY AUTO_INCREMENT,
    FECHA DATE,
    TOTAL DECIMAL(10, 2),
    ID_USUARIO INT,
    foreign key (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO)
);


-- TABLA DETALLE_VENTA
CREATE TABLE DETALLE_VENTA (
    ID_DETALLEVENTA INT PRIMARY KEY AUTO_INCREMENT,
    ID_PRODUCTO INT,
    ID_VENTA INT,
    CANTIDAD INT,
    PRECIO_TOTAL DECIMAL(10,2),
    IVA DECIMAL(10,2),
    FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
    FOREIGN KEY (ID_VENTA) references VENTA(ID_VENTA)
);


-- TABLA COMPRA
CREATE TABLE COMPRA (
    ID_COMPRA INT PRIMARY KEY AUTO_INCREMENT,
    TOTAL DECIMAL(10, 2),
    FECHA DATE,
    ID_PROVEEDOR INT,
	FOREIGN KEY (ID_PROVEEDOR) REFERENCES PROVEEDOR(ID_PROVEEDOR)
);


-- TABLA DETALLE_COMPRA
CREATE TABLE DETALLE_COMPRA (
	ID_DETALLECOMPRA INT auto_increment PRIMARY KEY,
    CANTIDAD INT,
    COSTO DECIMAL(10, 2),
    ID_PRODUCTO INT,
    ID_COMPRA INT,
    FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
	FOREIGN KEY (ID_COMPRA) REFERENCES COMPRA (ID_COMPRA)
);


 create table CAJA(
    ID_CAJA INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	USUARIO_ID INT,
	BILLETES_1000 INT,
	BILLETES_500 INT,
	BILLETES_200 INT,
	BILLETES_100 INT,
	BILLETES_50 INT,
	BILLETES_20 INT,
	MONEDAS DECIMAL(5,2),
	MONTO_ASIGNADO DECIMAL(10,2),
	FECHA_ASIGNACIÓN DATETIME,
    ACTIVO BOOLEAN,
	FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO (ID_USUARIO));

CREATE TABLE CIERRE_CAJA(
	ID_CIERRE INT NOT NULL PRIMARY KEY auto_increment,
    ID_CAJA INT,
    BILLETES_1000 INT,
	BILLETES_500 INT,
	BILLETES_200 INT,
	BILLETES_100 INT,
	BILLETES_50 INT,
	BILLETES_20 INT,
	MONEDAS INT,
    MONTO_ENTREGADO DECIMAL(10,2),
    MONTO_FINAL decimal(10,2), -- SUMA DE LAS VENTAS DEL CAJERO + MONTO DE ASIGNACIÓN
    DIFERENCIA DECIMAL(10,2),
    FECHA_FIN DATETIME,
    foreign key (ID_CAJA) REFERENCES CAJA (ID_CAJA)
);

CREATE TABLE IF NOT EXISTS codes (
    id_code INT PRIMARY KEY AUTO_INCREMENT,
    code VARCHAR(255) NOT NULL
);